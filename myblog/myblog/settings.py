"""
Django settings for myblog project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0v__)33q-c8ao26)-d^16)q)4u(28)b&b-e2=swj#uje(plfm('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tinymce',  # 注册富文本编辑器,方面admin页面的下管理有更好的编辑器
    'DjangoUeditor',  # 注册百度的Ueditor,因效果更好,替换上面的富文本编辑器
    'blog',  # 注册博客模块
)
# 添加富文本编辑器配置
TINYMCE_DEFAULT_CONFIG = {
    'theme': 'advanced',
    'width': 600,
    'height': 400,
}  # 还需要在同级的 urls.py 路由中配置编辑器url

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'myblog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # 添加templates模板的路径
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myblog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

# Django读写分离配置数据库 主从数据库
DATABASES = {
    # 使用mysql数据库还需要在同级的__init__.py中加入pymysql
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }

    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'myblog',  # 数据库名
        'HOST': 'localhost',  # 主机ip
        'PORT': '3306',  # mysql 的固定端口
        'USER': 'root',  # mysql的用户
        'PASSWORD': 'mysql',  # mysql用户对应的密码
    },

    # 'slave': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': 'myblog',  # 数据库名
    #     'HOST': 'localhost',  # 主机ip
    #     'PORT': '3306',  # mysql 的固定端口
    #     'USER': 'root',  # mysql的用户
    #     'PASSWORD': 'mysql',  # mysql用户对应的密码
    # }
}
'''
# 主从数据库的 读写分离路由器
DATABASE_ROUTERS = ["utils.db_router.MasterSlaveDBRouter"]
# django认证系统使用的用户模型
AUTH_USER_MODEL = "users.User"
'''
# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/
# 更改语言
LANGUAGE_CODE = 'zh-hans'
# 更改时区
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
# 以下部分是添加的静态文件与上传文件路径
STATIC_ROOT = os.path.join(BASE_DIR, 'static')  # 这个就是静态文件相对于系统的目录
# 公共的static文件
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "common_static"),
    os.path.join(BASE_DIR, "media"),
)  # 这一个元组，里面放置开发时静态文件自动搜寻的目录，
#    我们在开发是先建一个common_static即公用的静态文件夹，
#    在里面放我们自己的静态文件，等最后使用静态文件收集命令一并处理。

# upload floder上传路径
MEDIA_URL = '/media/'  # 一般会将上传的文件放入这个文件夹
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # 同STATIC_ROOT

STATICFILES_FINDERS = ("django.contrib.staticfiles.finders.FileSystemFinder",
                       "django.contrib.staticfiles.finders.AppDirectoriesFinder",)
# 接着在模型中使用Django Ueditor
'''
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]  # 添加静态文件目录
# 指定收集静态文件的目录
# 例:STATIC_ROOT = '/var/www/dailyfresh/static'
STATIC_ROOT = ''  # 配合下面一条代码
MEDIA_ROOT = os.path.join(BASE_DIR, 'static')  # 设置上传文件的目录
'''
